version: '3.8'

services:
  # Frontend - Next.js UI (Development)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    container_name: zero-rag-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend-dev
    restart: unless-stopped
    networks:
      - zero-rag-network

  # Backend - FastAPI (Development)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    container_name: zero-rag-backend-dev
    ports:
      - "8000:8000"
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - LOG_LEVEL=DEBUG
      - DEBUG=true
    volumes:
      - .:/app
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      qdrant:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - zero-rag-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: zero-rag-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # GRPC API
    volumes:
      - qdrant_data:/qdrant/storage
      - qdrant_snapshots:/qdrant/snapshots
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__SERVICE__ENABLE_TLS=false
      - QDRANT__SERVICE__CORS_ALLOW_ORIGINS=["*"]
    restart: unless-stopped
    networks:
      - zero-rag-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:6333/collections || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: zero-rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - zero-rag-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Ollama for local LLM models
  ollama:
    image: ollama/ollama:latest
    container_name: zero-rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    networks:
      - zero-rag-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:11434/api/tags || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  qdrant_data:
    driver: local
  qdrant_snapshots:
    driver: local
  redis_data:
    driver: local
  ollama_data:
    driver: local

networks:
  zero-rag-network:
    driver: bridge
